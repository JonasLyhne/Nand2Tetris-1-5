// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, 
             a=dma, b=dmb, c=dmc,
             d=dmd, e=dme, f=dmf,
             g=dmg, h=dmh);

    Register(in=in, load=dma, out=reg1out);
    Register(in=in, load=dmb, out=reg2out);
    Register(in=in, load=dmc, out=reg3out);
    Register(in=in, load=dmd, out=reg4out);
    Register(in=in, load=dme, out=reg5out);
    Register(in=in, load=dmf, out=reg6out);
    Register(in=in, load=dmg, out=reg7out);
    Register(in=in, load=dmh, out=reg8out);

    Mux8Way16(a=reg1out, b=reg2out,
              c=reg3out, d=reg4out,
              e=reg5out, f=reg6out,
              g=reg7out, h=reg8out, 
              sel=address, out=out);
    

}